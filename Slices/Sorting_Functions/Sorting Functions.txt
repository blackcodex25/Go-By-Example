การจัดเรียง (sorting) คอลเล็กชันของข้อมูลใน Go
ด้วยการจัดเรียงตามเกณฑ์ที่กำหนดเอง (custom sorts)
ซึ่งแตกต่างจากการเรียงลำดับตามลำดับปกติ
เช่น การเรียงลำดับอักษร โดยมีการใช้ฟังก์ชันเปรียบเทียบ (comparison 
function) ที่เรากำหนดเองเพื่อจัดเรียงข้อมูลตามเกณฑ์ที่ต้องการ

สรุปเนื้อหา:
1.การจัดเรียงแบบกำหนดเอง
บางครั้งเราอาจต้องการเรียงลำดับคอลเล็กชันของข้อมูลตาม
เงื่อนไขที่ต่างจากการเรียงตามปกติ เช่น การเรียงลำดับ string
ตามความยาวแทนที่จะเรียงตามลำดับอักษร 
ในตัวอย่างนี้จะใช้ฟังก์ชันเปรียบเทียบ (comparison function)
ที่กำหนดเองเพื่อตรวจสอบความยาวของ string
และใช้ฟังก์ชัน slices.SortFunc เพื่อจัดเรียง string เหล่า
นั้นตามความยาว

2.การใช้ฟังก์ชันเปรียบเทียบ (comparison function)
เราสามารถเขียนฟังก์ชันเปรียบเทียบเองสำหรับการจัดเรียง
ข้อมูลใน Go โดยใช้ cmp.Compare ซึ่งช่วยในการสร้าง
ฟังก์ชันเปรียบเทียบตามเงื่อนไขที่เราต้องการ เช่น การเปรียบ
เทียบความยาวของ string เพื่อจัดเรียง string ตามความยาว

3.การจัดเรียงข้อมูลที่ไม่ใช่ชนิดข้อมูลพื้นฐาน (built-in types)
เทคนิคเดียวกันนี้สามารถนำมาใช้เพื่อจัดเรียงข้อมูลใน slice ที่
เป็นประเภทข้อมูลอื่นๆ ที่ไม่ใช่ประเภทพื้นฐานใน Go ได้
เช่น struct

4.การจัดเรียง struct (เช่น การจัดเรียงคนตามอายุ)
ตัวอย่างหนึ่งคือการจัดเรียง slice ที่เก็บข้อมูลประเภท Person
ซึ่งเป็น struct โดยจัดเรียงตามค่า age ของแต่ละคน
ด้วยการใช้ slices.SortFunc
ทั้งนี้ หาก struct ที่ใช้มีขนาดใหญ่แนะนำให้ใช้ pointer (*Person)
แทนการเก็บค่าของ struct โดยตรงเพื่อเพิ่มประสิทธิภาพ
และควรทำการ benchmark เพื่อตรวจสอบว่า 
แบบใดมีประสิทธิภาพที่ดีกว่า
 