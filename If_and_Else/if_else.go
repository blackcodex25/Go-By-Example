package main

import (
	f "fmt"
)

/*
	การใช้งาน if และ else ในภาษา Go

การใช้งาน if และ else ในภาษา Go นั้นตรงไปตรงมาและ
เรียบง่ายมาก การใช้คำสั่งเหล่านี้ช่วยให้เราสามารถควบคุมการทำงาน
ของโปรแกรมตามเงื่อนไขต่างๆ ได้
*/
func main() {
	// การใช้งาน if และ else
	if 7%2 == 0 {
		f.Println("7 เป็นเลขคู่")
	} else {
		f.Println("7 เป็นเลขคี่")
	}
	/* เงื่อนไข 7%2 == 0 คือการตรวจสอบว่าตัวเลข 7 หารด้วย
	2 ลงตัวหรือไม่ (% เป็นการหารเอาเศษ) ถ้าลงตัวจะแสดงว่า
	7 เป็นเลขคู่ แต่ถ้าไม่ลงตัวจะแสดงว่า 7 เป็นเลขคี่
	*/

	// การใช้งาน if โดยไม่มี else
	if 8%4 == 0 {
		f.Println("8 หารด้วย 4 ลงตัว")
	}
	/* ตรวจสอบว่า 8 หารด้วย 4 ลงตัวหรือไม่ ถ้าลงตัวจะแสดง
	ข้อความว่า 8 หารด้วย 4 ลงตัว ถ้าไม่ลงตัว โปรแกรมจะไม่ทำอะไร
	*/

	// การใช้ตัวดำเนินการทางตรรกะ (&&, ||)
	// && Logical AND คือ คืนค่า true ถ้าทั้งสองคำสั่งเป็น true
	// || Logical OR  คือ คืนค่า true ถ้ามีอย่างน้อยหนึ่งคำสั่งที่เป็น true
	if 8%2 == 0 || 7%2 == 0 {
		f.Println("8 หรือ 7 เป็นเลขคู่")
	}
	/* เงื่อนไข 8%2 == 0 || 7%2 == 0 ใช้ตัวดำเนินการ || (OR)
	เพื่อตรวจสอบว่าอย่างน้อยหนึ่งในสองเงื่อนไขเป็นจริง ถ้าเป็นจริงจะแสดง
	ข้อความ "เลข 8 หรือ 7 อย่างใดอย่างหนึ่งเป็นเลขคู่"
	*/

	// การประกาศตัวแปรก่อนเงื่อนไข
	if num := 9; num < 0 {
		f.Println(num, "เป็นลบ")
	} else if num < 10 {
		f.Println(num, "มี 1 หลัก")
	} else {
		f.Println(num, "มีหลายหลัก")
	}
	/* ตัวแปร num ถูกประกาศและกำหนดค่าเป็น 9 ก่อนที่จะตรวจสอบเงื่อนไข
	เงื่อนไขแรกตรวจสอบว่า num < 0 หรือไม่ ถ้าใช่จะแสดงว่า num เป็นลบ
	ถ้าไม่ใช่ จะตรวจสอบเงื่อนไขถัดไป (else if) ว่า num < 10 หรือไม่
	ถ้าใช่จะแสดงว่า num มี 1 หลัก
	ถ้าไม่เข้าเงื่อนไขใดๆ ข้างต้น จะแสดงข้อความ num มีหลายหลัก
	*/
}

/* Note: ในภาษา Go เราไม่จำเป็นต้องใช้วงเล็บ () รอบๆ เงื่อนไข
ใน if แต่ต้องใช้วงเล็บปีกกา {} เพื่อครอบคลุมบล็อกของงคำสั่งที่ต้อง
การให้ทำงานเมื่อเงื่อนไขเป็นจริง
*/

/* สรุป Logic ของโค้ด
- โค้ดนี้แสดงการใช้งานคำสั่ง if, else if, และ else
ในภาษา Go โดยใช้ตัวอย่างพื้นฐานเพื่ออธิบายการตรวจสอบเงื่อนไขต่างๆ
- โค้ดนี้ยังแสดงการใช้ตัวดำเนินการทางตรรกะ (&&, ||)
ในการตรวจสอบเงื่อนไขหลายๆ เงื่อนไขพร้อมกัน
- การประกาศตัวแปรก่อนเงื่อนไขเป็นคุณสมบัติที่มีประโยชน์
ที่ช่วยให้เราสามารถใช้งานตัวแปรในบล็อกของเงื่อนไขและบล็อกถัดไป
ได้อย่างง่าย
โค้ดนี้เป็นตัวอย่างที่ดีในการทำความเข้าใจการใช้งานคำสั่งควบคุมในภาษา Go
และวิธีตรวจสอบและตอบสนองต่อเงื่อนไขต่างๆ ในโปรแกรม
*/
