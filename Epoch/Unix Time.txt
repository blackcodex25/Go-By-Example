Unix time (หรือเรียกอีกอย่างว่า Epoch time, POSIX time, หรือ Unix timestamp)
คือวิธีการแสดงเวลาเป็นจำนวนวินาทีที่ผ่านไปนับตั้งแต่ 00:00:00 UTC 
ของวันที่ 1 มกราคม 1970 ซึ่งถือว่าเป็น "จุดเริ่มต้น" หรือ "epoch" ของระบบ Unix

Unix time ใช้ในระบบปฏิบัติการ Unix และระบบอื่น ๆ อีกมากมายเพื่อจัดการกับเวลา
เนื่องจากมันเป็นการแสดงเวลาที่ง่ายต่อการคำนวณและไม่มีความซับซ้อนจากเขตเวลา (timezone)
หรือรูปแบบเวลา (เช่น AM/PM) อีกทั้งยังสามารถนำไปใช้ในการคำนวณความ
แตกต่างระหว่างเวลาต่างๆ ได้ง่าย

ตัวอย่าง:
Unix time 0 หมายถึงวันที่ 1 มกราคม 1970 เวลา 00:00:00 UTC
Unix time 1,000,000 หมายถึงเวลาที่ผ่านไปหนึ่งล้านวินาที
จากวันที่ 1 มกราคม 1970 ซึ่งคือวันที่ 12 มกราคม 1970 เวลา 13:46:40 UTC

การคำนวณ Unix time:
Unix time จะแสดงเวลาเป็นจำนวนวินาทีที่เพิ่มขึ้นเรื่อยๆ 
เมื่อเวลาผ่านไป ตัวอย่างเช่น:
วันที่ 11 กันยายน 2024 เวลา 12:00:00 UTC จะถูกแสดงเป็น 
Unix time ประมาณ 1726094400

การใช้งาน:
Unix time มักใช้ใน:
ฐานข้อมูล: เพื่อบันทึกเวลาที่เกิดเหตุการณ์ต่างๆ เช่น การสร้างบันทึก, การอัปเดตข้อมูล
ระบบไฟล์: เพื่อบันทึกเวลาการสร้างและแก้ไขไฟล์
ระบบเครือข่ายและโปรโตคอล: เช่น HTTP, ที่ต้องบันทึกเวลา
ในรูปแบบที่สามารถนำไปใช้ได้ในระบบที่แตกต่างกัน

การแปลง Unix time ใน Go:
เราสามารถแปลง Unix time ไปเป็นเวลาปกติใน Go ได้โดยใช้ฟังก์ชัน time.Unix() 
เช่น:
 // Unix time 1633046400 คือวันที่ 1 ตุลาคม 2021 เวลา 00:00:00 UTC
    t := time.Unix(1633046400, 0)
    fmt.Println(t)
2021-10-01 00:00:00 +0000 UTC

ถ้าเราต้องการแปลงเวลาปัจจุบันเป็น Unix time:
    now := time.Now()
    unixTime := now.Unix()
    fmt.Println(unixTime)
ผลลัพธ์จะเป็นจำนวนวินาทีที่ผ่านไปนับตั้งแต่วันที่ 1 มกราคม 1970
ซึ่งเป็นค่า Unix time ของเวลาปัจจุบัน

สรุป
Unix time คือระบบที่ใช้ในการนับเวลาจากจุดเริ่มต้นที่ 1 มกราคม 1970
ซึ่งช่วยให้เราสามารถจัดการและคำนวณเวลาด้วยตัวเลขที่ง่ายและไม่ซับซ้อน