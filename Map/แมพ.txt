   การใช้งาน Maps ในภาษา Go
maps เป็นโครงสร้างข้อมูลแบบ associative array ในภาษา Go (บางครั้งใน
ภาษาอื่นอาจเรียกว่า hashes หรือ dicts) Map ใน Go ใช้สำหรับเก็บคู่ของ
ข้อมูลที่เป็น key-value โดยที่ key สามารถใช้เพื่อเข้าถึงหรือแก้ไขค่าที่
สอดคล้องกัน (value) ได้

     คุณสมบัติและการใช้งาน Maps 
1.การสร้าง map ว่าง
ใช้คำสั่ง make(map[key-type]val-type) เพื่อสร้าง map ว่าง โดยที่
key-type คือประเภทของ key และ val-type คือประเภทของ value

2.การกำหนดค่า key-value
ใช้ syntax name[key] = val เพื่อกำหนดค่าให้กับ key ที่กำหนดใน map

3.การพิมพ์ map
การพิมพ์ map โดยใช้ f.Println() จะแสดงคู่ของ key-value 
ทั้งหมดใน map 

4.การเข้าถึงค่าใน map
ใช้ name[key] เพื่อเข้าถึงค่า (value) ที่สอดคล้องกับ key ที่
กำหนด ถ้า key นั้นไม่มีอยู่ใน map Go จะคืนค่าเริ่มต้น (zero value)
ของประเภท value นั้น

5.การหาจำนวนของคู่ key-value ใน map
ใช้ len(map) เพื่อคืนค่าจำนวนของคู่ key-value ที่มีอยู่ใน map

6.การลบคู่ key-value
ใช้คำสั่ง delete(map, key) เพื่อทำการลบคู่ key-value ออกจาก map

7.การเคลีย์ข้อมูลทั้งหมดใน map
ใช้คำสั่ง clear(map) เพื่อลบคู่ key-value ทั้งหมดใน map

8.การตรวจสอบว่ามี key อยู่ใน map หรือไม่
เมื่อทำการเข้าถึงค่าใน map สามารถใช้ค่ารีเทิร์นตัวที่สองเพื่อระบุว่ามี 
key นั้นอยู่ใน map หรือไม่ ถ้ามีจะคืนค่า true ถ้าไม่มีก็จะคืนค่า false

9.การประกาศและกำหนดค่า map ได้ในบรรทัดเดียว เช่น 
n := map[string]int{"foo": 1, "bar": 2}

10.การใช้งานฟังก์ชันในแพ็กเกจ map
แพ็กเกจ maps มีฟังก์ชันที่มีประโยชน์มากมายสำหรับการทำงานกับ maps
เช่นการเปรียบเทียบ map ด้วย maps.Equal