Closing Channels
ในภาษา Go คือกระบวนการปิดช่องทางการสื่อสาร (channel) 
เมื่อไม่มีการส่งข้อมูลผ่าน channel นั้นอีกต่อ
ไป โดยการปิด channel จะบ่งบอกว่าไม่มีข้อมูลเพิ่มเติมที่จะถูก
ส่งเข้ามา ซึ่งมีความสำคัญในการจัดการการทำงานร่วมกันของ
goroutines หลายตัวอย่างมีประสิทธิภาพและหลีกเลี่ยงการเกิด deadlock 
หรือการรอคอยที่ไม่จำเป็น


โครงสร้างการปิด Channel
การปิด channel สามารถทำได้โดยใช้ฟังก์ชัน close() ซึ่งจะ
ใช้กับ channel ที่ต้องการปิดเท่านั้น การปิด channel จะมีผล

การส่งข้อมูล: เมื่อ channel ถูกปิดแล้ว จะไม่สามารถส่ง
ข้อมูลเข้าไปใน channel นั้นได้อีก หากมีความพยายามที่จะ
ส่งข้อมูลไปยัง channel ที่ปิดแล้ว โปรแกรมจะเกิด panic
ขึ้น

การรับข้อมูล: เมื่อ channel ถูกปิดและมีการรับข้อมูลจาก
channel นั้น ถ้ายังมีข้อมูลใน buffer ของ channel อยู่
ข้อมูลเหล่านั้นจะยังสามารถถูกดึงออกมาได้จนหมด หลัง
จากที่ข้อมูลทั้งหมดถูกดึงออกมาแล้ว การรับข้อมูลเพิ่มเติม
จะส่งคืนค่า zero value ของประเภทข้อมูลนั้นและจะไม่มี
การส่งข้อมูลเพิ่มเติมอีก

การทำงานของ for-loop: เมื่อใช้ for-loop ในการรับ
ข้อมูลจาก channel ที่ปิดแล้ว for-loop จะหยุดการทำงาน
เมื่อ channel ไม่มีข้อมูลเพิ่มเติม

ประโยชน์ของการปิด Channel
ป้องกันการเกิด Deadlock: การปิด channel อย่างเหมาะ
สมจะช่วยหลีกเลี่ยงการเกิด deadlock เนื่องจาก
goroutines อื่นๆ จะไม่ต้องรอคอยข้อมูลที่ไม่มีวันมาถึง
ประสิทธิภาพ: ช่วยให้โค้ดสามารถทำงานร่วมกันได้อย่างมี
ประสิทธิภาพมากขึ้น โดยเฉพาะในกรณีที่ต้องการทำงานกับ
หลาย goroutines
ความชัดเจนในโค้ด: การปิด channel เป็นการสื่อถึงจุดสิ้น
สุดของการส่งข้อมูล ทำให้โค้ดอ่านง่ายและเข้าใจได้ชัดเจน
ขึ้น