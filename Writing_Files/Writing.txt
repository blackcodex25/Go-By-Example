การอธิบายรายละเอียด:
การเขียนไฟล์ในภาษา Go มีรูปแบบการทำงานที่คล้ายกับการอ่านไฟล์
โดยจะประกอบด้วยการสร้างไฟล์ การเขียนข้อมูลไฟล์ และการปิดไฟล์
หลังจากการใช้งานเสร็จสมบูรณ์ นอกจากนี้ยังมีการใช้ bufio.Writer
เพื่อการเขียนข้อมูลแบบบัฟเฟอร์ (buffered) ซึ่งมีประสิทธิภาพมากขึ้น
สำหรับการเขียนหลายๆ ครั้ง

สรุปหลักการทำงานของโปรแกรม:
1.เขียนข้อมูลลงไฟล์อย่างง่าย: ใช้ฟังก์ชัน os.WriteFile
เพื่อเขียนข้อมูลที่เป็น byte slice ลงในไฟล์ โดยตั้ง permission
เป็น 0644 ซึ่งหมายความว่าเจ้าของไฟล์ สามารถอ่านและเขียนได้
ในขณะที่ผู้ใช้คนอื่นๆ สามารถอ่านได้เท่านั้น

2.เปิดไฟล์เพื่อเขียนข้อมูล: ฟังก์ชัน os.Create ใช้เพื่อ
สร้างไฟล์ใหม่ หรือถ้าไฟล์นั้นมีอยู่แล้วจะทำการเขียนทับ (overwrite) ไฟล์นั้น
การใช้ defer ในการปิดไฟล์หลังจากการเขียนช่วยให้มั่นใจว่าไฟล์จะถูกปิดแม้ว่าจะ
เกิดข้อผิดพลาดใดๆ

3.เขียนข้อมูลเป็น byte slice: ฟังก์ชัน write ใช้ในการเขียน byte slice ลง
ในไฟล์ โดยจะคืนค่าจำนวนไบต์ที่ถูกเขียน และใช้ fmt.Printf เพื่อแสดงจำนวนไบต์ที่ถูกเขียน

4.เขียนข้อมูลเป็นสตริง: ฟังก์ชัน WriteSting ใช้ในการเขียนสตริงลงไฟล์โดยตรง
ซึ่งเป็นวิธีที่สะดวกถ้าข้อมูลที่จะเขียนเป็นข้อความธรรมดา

5.ใช้ Sync เพื่อบันทึกการเขียนลงดิสจริงๆ: ฟังก์ชัน f.Sync() ใช้เพื่อบังคับให้ข้อมูล
ถูกบันทึกลงดิสก์เพื่อป้องกันการสูญหายของข้อมูลที่อาจเกิดจากการทำงานที่ยังไม่ถูก flush

6.เขียนข้อมูลแบบบัฟเฟอร์: ฟังก์ชัน bufio.NewWriter ใช้เพื่อสร้าง writer แบบบัฟเฟอร์
โดยการเขียนข้อมูลจะถูกเก็บไว้ในบัฟเฟอร์ก่อนถูก flush ลงดิสก์จริงๆ ทำให้
การเขียนหลายๆ ครั้งมีประสิทธิภาพมากขึ้น และการเรียกใช้ w.Flush()
เพื่อบันทึกข้อมูลที่อยู่ในบัฟเฟอร์ลงดิสก์