Text Templates
Go มีการรองรับการสร้างเนื้อหาแบบไดนามิกหรือการแสดงผลที่
ปรับแต่งได้สำหรับผู้ใช้ โดยใช้แพ็กเกจ text/template
นอกจากนี้ยังมีแพ็กเกจคู่ที่ชื่อว่า html/template ซึ่งมี API เหมือนกัน
แต่เพิ่มคุณสมบัติด้านความปลอดภัยและเหมาะสำหรับการสร้าง HTML

เราสามารถสร้างเทมเพลตใหม่และใส่เนื้อหาจากสตริง เทมเพลต
จะเป็นการผสมผสานระหว่างข้อความคงที่และ "actions" ซึ่งอยู่
ในรูปแบบ {{...}} ที่ใช้สำหรับแทรกเนื้อหาแบบไดนามิก 

นอกจากนี้เราสามารถใช้ฟังก์ชัน template.Must ซึ่งจะหยุด
โปรแกรมถ้าหากเกิดข้อผิดพลาดเมื่อใช้ฟังก์ชัน Parse สิ่งนี้มี
ประโยชน์เมื่อมีการเริ่มต้นเทมเพลตในขอบเขตแบบ global

เมื่อทำการ "execute" เทมเพลต เราจะสร้างข้อความโดยมีค่าเฉพาะ
ที่แทนที่ action {{.}} โดยค่านี้จะถูกแทนที่ด้วยค่าที่ส่งผ่านไปในฟังก์ชัน Execute

ถ้าข้อมูลเป็น struct เราสามารถเข้าถึงฟิลด์ได้ด้วยการใช้ action {{.FieldName}}
โดยฟิลด์ต้องเป็น public จึงจะสามารถเข้าถึงได้เมื่อเทมเพลตกำลังทำงาน

ในกรณีของ map ไม่มีข้อจำกัดเกี่ยวกับชื่อคีย์
if/else ถูกใช้สำหรับการดำเนินการตามเงื่อนไข ค่าใดๆ ที่เป็นค่าเริ่มต้น
ของประเภท เช่น 0, สตริงว่าง, หรือ nil จะถูกพิจารณาว่าเป็น "false"

range block ช่วยให้เราสามารถวนซ้ำ (loop) ใน slice, array, map หรือ channel ได้ 
โดยที่ {{.}} จะถูกตั้งค่าให้เป็นค่าปัจจุบันในแต่ละรอบของการวนซ้ำ

สรุป
Go รองรับการสร้างเนื้อหาไดนามิกผ่านแพ็กเกจ text/template
โดยมีฟีเจอร์การแทรกข้อความแบบไดนามิกผ่าน {{...}} ซึ่ง
สามารถใช้แทรกค่าจาก struct หรือ map และรองรับการใช้งาน if/else
 และการวนซ้ำ (range)