package testingandcode

import "testing"

func TestDivMod(t *testing.T) {
	dvnd := 40                              // ตัวตั้ง (dividend)
	for dvsor := 1; dvsor < dvnd; dvsor++ { // ตัวหาร (divisor) เริ่มจาก 1 ถึง 39
		q, r := DivMod(dvnd, dvsor) // เรียกใช้ฟังก์ชัน Divmod
		if (dvnd % dvsor) != r {    // ตรวจสอบว่าเศษที่เหลือถูกต้องหรือไม่
			// ถ้าไม่ถูกต้อง ให้แสดงความผิดพลาด
			t.Fatalf("%d%d q=%d, r=%d, bad remainder.", dvnd, dvsor, q, r)
		}
	}
}

/* การทำงานของโค้ด
1.ประกาศแพ็กเกจและนำเข้าแพ็กเกจ testing:
โค้ดนี้อยู่ในแพ็กเกจ testexample และนำเข้า
แพ็กเกจ testing เพื่อใช้ฟังก์ชันทดสอบ
2.ฟังก์ชัน TestDivide: ฟังก์ชันนี้จะทดสอบฟังก์ชัน DivMod
โดยการวนลูปตัวหาร (dvsor) ตั้งแต่ 1 ถึง 39
3.เรียกใช้ฟังก์ชัน DivMod: ในแต่ละรอบของลูป ฟังก์ชัน DivMod
จะถูกเรียกใช้โดยมีตัวตั้ง (dvnd) เป็น 40 และตัวหาร (dvsor) เป็นค่า
ปัจจุบันของลูป
4.ตรวจสอบผลลัพธ์:
ผลลัพธ์ที่ได้จาก DivMod จะถูกตรวจสอบว่าค่าที่เหลือ (r) ตรงกับค่าที่
คำนวณได้จากการหาร (dvnd % dvsor) หรือไม่
5.แสดงข้อความผิดพลาด: ถ้าค่าที่เหลือไม่ตรงกัน ฟังก์ชัน t.Fatalf
จะถูกเรียกใช้เพื่อแสดงข้อความผิดพลาดและหยุดการทดสอบ
*/
