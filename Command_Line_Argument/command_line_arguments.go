package main

import (
	"fmt"
	"os"
)

/*
การใช้ command-line arguments ในภาษา Go
โดยใช้แพ็กเกจ os เพื่อเข้าถึงและจัดการกับอาร์กิวเมนต์ที่ถูกส่งเข้ามาเมื่อเรียกโปรแกรม
*/
func main() {
	//  os.Args เป็นสไลซ์ (slice) ที่เก็บอาร์กิวเมนต์ทั้งหมดที่ถูก
	//  ส่งเข้ามาในโปรแกรม
	// ค่าที่อยู่ในตำแหน่งแรก (os.Args[0]) คือชื่อโปรแกรมเอง
	// (path) และค่าที่ตามมาคืออาร์กิวเมนต์ที่ถูกส่งไปยังโปรแกรม
	// os.Args[1:] ใช้เพื่อเข้าถึงอาร์กิวเมนต์ทั้งหมดโดยไม่รวมชื่อโปรแกรม
	argsWithProg := os.Args
	argsWithoutProg := os.Args[1:]

	// การเข้าถึงอาร์กิวเมนต์เฉพาะ
	// โค้ดนี้จะดึงอาร์กิวเมนต์ที่อยู่ในตำแหน่งที่ 3 ของ os.Args
	// ซึ่งหมายถึงอาร์กิวเมนต์ที่ส่งมาเป็นลำดับที่ 4 เนื่องจากการนับ
	// ตำแหน่งเริ่มต้นที่ 0
	// หากจำนวนอาร์กิวเมนต์ที่ส่งเข้ามาน้อยกว่าที่คาดหวัง (น้อยกว่า 4 อาร์กิวเมนต์ในกรณีนี้)
	// จะเกิดข้อผิดพลาดเมื่อโปรแกรมทำงาน
	arg := os.Args[3]

	// แสดงรายการอาร์กิวเมนต์ทั้งหมดรวมถึงชื่อโปรแกรม
	fmt.Println(argsWithProg)
	// แสดงอาร์กิวเมนต์ทั้งหมดโดยไม่รวมชื่อโปรแกรม
	fmt.Println(argsWithoutProg)
	// แสดงอาร์กิวเมนต์ที่อยู่ในตำแหน่งที่ 3
	fmt.Println(arg)
}

/* 4.วิธีการทำงานของโปรแกรม
เมื่อรันโปรแกรมนี้โดยใช้คำสั่ง go run main.go arg1 arg2 arg3 arg4,
ตัวแปร argsWithProg จะเก็บค่า ["main.go", "arg1", "arg2", "arg3", "arg4"],
argsWithoutProg จะเก็บค่า ["arg1", "arg2", "arg3", "arg4"]
และ arg จะมีค่าเป็น "arg4" (ค่าที่อยู่ในตำแหน่งที่ 3 ของสไลซ์)
*/
/* สรุป
โค้ดนี้สาธิตวิธีการเข้าถึงและจัดการกับอาร์กิวเมนต์ที่ถูกส่งเข้ามาในโปรแกรม
โดยใช้ os.Args ซึ่งเป็นวิธีการที่ใช้กันทั่วไปในการทำงานกับ
command-line arguments ในภาษา Go
*/
