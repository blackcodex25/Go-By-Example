Atomic Counters คืออะไร?
Atomic Counters เป็นเทคนิคในการนับค่าที่ปลอดภัยจากการ
เกิดปัญหา race condition ซึ่งเป็นสถานการณ์ที่เกิดขึ้นเมื่อ
หลายๆ goroutine เข้าถึงหรือปรับค่าตัวแปรร่วมกันพร้อมกัน
ทำให้เกิดความผิดพลาดหรือพฤติกรรมที่ไม่คาดคิดขึ้นได้

Go มีการสนับสนุนการจัดการตัวแปรแบบ Atomic ผ่านแพ็กเกจ
sync/atomic ซึ่งให้ฟังก์ชันสำหรับการดำเนินการบนตัวแปร
ต่างๆ อย่างปลอดภัยในสถานการณ์ที่มีการทำงานพร้อมกัน
(concurrent operations)

การใช้งาน Atomic Counters ใน Go
ในการใช้งาน atomic counters เราสามารถใช้ฟังก์ชันในแพ็กเกจ sync/atomic
เช่น atomic.AddInt32, atomic.LoadInt32, atomic.StoreInt32, และ
atomic.CompareAndSwapInt32 สำหรับการดำเนินการเพิ่ม อ่านค่า, เขียนค่า, 
และตรวจสอบ-เปลี่ยนค่าตัวแปรประเภท int32 หรือ int64 ได้อย่างปลอดภัย

Race Condition คืออะไร?
Race Condition คือสถานการณ์ที่เกิดขึ้นเมื่อหลายๆ goroutine 
หรือ thread เข้าถึงหรือปรับค่าตัวแปรร่วมกันพร้อมกันโดยที่ไม่มี
การควบคุมการเข้าถึงอย่างเหมาะสม ผลที่ตามมาคือค่าในตัวแปร
อาจไม่ถูกต้องหรือไม่สามารถคาดการณ์ได้เนื่องจากการทำงานพร้อมกันที่ขัดแย้งกัน

