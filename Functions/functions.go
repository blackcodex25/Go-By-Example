package main

import (
	f "fmt"
)

/* การใช้งานฟังก์ชันในภาษา Go
ฟังก์ชันเป็นส่วนสำคัญในภาษา Go ซึ่งทำหน้าที่เป็นหน่วยของการดำเนิน
การที่สามารถเรียกใช้ซ้ำได้ การเขียนโปรแกรมด้วยฟังก์ชันช่วยให้โค้ดมี
ความยืดหยุ่นและสามารถจัดการได้ง่ายข้น บทความนี้จะอธิบายเกี่ยวกับ
ฟังก์ชันในภาษา Go โดยใช้ตัวอย่างต่างๆ

คุณสมบัติและการใช้งานฟังก์ชันใน Go
1.การสร้างฟังก์ชันที่รับพารามิเตอร์และคืนค่าผลลัพธ์
- ฟังก์ชันใน Go สามารถรับพารามิเตอร์และคืนค่าผลลัพธ์ได้
- ตัวอย่างเช่น ฟังก์ชัน plus รับค่าตัวเลข 2 ตัว (ชนิด int) และ
คืนค่าผลรวมของมัน

2.การคืนค่าผลลัพธ์ (Explicit Returns)
- ใน Go เราจำเป็นต้องคืนค่าผลลัพธ์อย่างชัดเจนโดยใช้คำสั่ง
return ซึ่ง Go จะไม่คืนค่าโดยอัตโนมัติจากนิพจน์สุดท้ายใน
ฟังก์ชัน

3.การลดความซ้ำซ้อนในการกำหนดชนิดของพารามิเตอร์
ถ้าฟังก์ชันมีพารามิเตอร์หลายตัวที่มีชนิดข้อมูลเดียวกัน สามารถละ
การกำหนดชนิดข้อมูลซ้ำๆ ได้ และกำหนดชนิดข้อมูลเฉพาะ
พารามิเตอร์สุดท้ายที่มีชนิดนั้น

4.การเรียกใช้ฟังก์ชัน
การเรียกใช้ฟังก์ชันใน Go จะทำได้โดยการเรียกชื่อฟังก์ชันพร้อม
กับส่งค่าอาร์กิวเมนต์(arguments) เข้าไป
*/
// ฟังก์ชัน plus รับพารามิเตอร์ 2 ตัว (a int, b int) ซึ่งทั้งคู่มีชนิดข้อมูลเป็น int
func plus(a int, b int) int {
	// ฟังก์ชันนี้คืนค่าผลรวมของ a และ b โดยใช้คำสั่ง return a + b
	// ซึ่งผลลัพธ์จะเป็นชนิด int
	return a + b
}

// ฟังก์ชัน plusPlus รับพารามิเตอร์ 3 ตัว (a, b, c ทั้งหมดเป็น int)
func plusPlus(a, b, c int) int {
	// ฟังก์ชันนี้คืนค่าผลรวมของ a, b, และ c
	return a + b + c
	/* การเขียนแบบนี้ช่วยลดความซ้ำซ้อนในการกำหนดชนิดข้อมูล
	เพราะสามารถระบุชนิดข้อมูลเพียงครั้งเดียวสำหรับพารามิเตอร์ที่มีชนิดเดียวกัน
	*/
}
func main() {
	// เรียกใช้ฟังก์ชัน plus และ plusPlus
	// เรียกใช้ฟังก์ชัน plus โดยส่งค่า 1 และ 2 เป็นอากิวเมนต์
	// ผลลัพธ์ที่ได้จะถูกเก็บในตัวแปร res
	res := plus(1, 2)
	// พิมพ์ผลลัพธ์ซึ่งจะได้ข้อความ 1+2 = 3 ออกจอ
	f.Println("1+2 =", res)

	// เรียกใช้ฟังก์ชัน plusPlus โดยส่งค่า 1, 2, และ 3 เป็นอากิวเมนต์
	// ผลลัพธ์ที่ได้จะถูกเก็บในตัวแปร res
	res = plusPlus(1, 2, 3)
	// พิมพ์ผลลัพธ์ซึ่งจะได้ข้อความ 1+2+3 = 6
	f.Println("1+2+3 =", res)

}

/* สรุป
โค้ดนี้แสดงการใช้งานฟังก์ชันในภาษา Go โดยเริ่มจากฟังก์ชันที่รับ
พารามิเตอร์และคืนค่าผลลัพธ์ ซึ่งใน Go การคืนค่าผลลัพธ์จะต้องระบุอย่าง
ชัดเจน นอกจากนี้ยังแสดงวิธีการลดความซ้ำซ้อนในการกำหนดชนิดข้อมูล
ของพารามิเตอร์ในฟังก์ชัน และการเรียกใช้ฟังก์ชันด้วยอาร์กิวเมนต์ ฟังก์ชัน
เป็นส่วนสำคัญที่ช่วยให้โค้ดเป็นระเบียบและสามารถนำกลับมาใช้ใหม่ได้
*/
