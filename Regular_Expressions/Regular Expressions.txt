Go มีการสนับสนุนการใช้งาน Regular Expressions (regex) ภายในตัวอย่างที่
สร้างไว้ในภาษา Go มีตัวอย่างการใช้งานที่เกี่ยวข้องกับการใช้ regex เพื่อทดสอบค้นหา
และจัดการข้อมูลในสตริง
เนื้อหาสำคัญ:
1.การทดสอบการจับคู่ (Pattern Matching): สามารถใช้ฟังก์ชันเพื่อทดสอบ
ว่าสตริงตรงกับรูปแบบที่กำหนดหรือไม่

2.การคอมไพล์รูปแบบ (Compile): สำหรับงาน regex ที่ซับซ้อนสามารถคอมไพล์
รูปแบบเป็น Regexp struct ซึ่งช่วยเพิ่มประสิทธิภาพ

3.การค้นหาและดัชนี: ฟังก์ชันสามารถค้นหาส่วนที่ตรงกับรูปแบบได้ทั้งแบบ
แสดงผลเป็นสตริงที่จับคู่ หรือแสดงผลเป็นดัชนีที่เริ่มต้นและสิ้นสุดของข้อความที่จับคู่

4.Submatch: ฟังก์ชันรองรับการค้นหา submatches ที่แยกย่อยได้ภายในข้อความหลัก
เช่น การจับคู่ทั้งรูปแบบหลักและรูปแบบย่อย

5.การค้นหาทั้งหมด: ฟังก์ชันสามารถค้นหาทุกส่วนที่ตรงกับรูปแบบในสตริง
ไม่เพียงแค่ส่วนแรก

6.การใช้แบบ byte: ฟังก์ชัน regex รองรับข้อมูลแบบ []byte นอกเหนือจากข้อมูลแบบสตริง

7.MustCompile: สำหรับตัวแปร regex แบบ global ควรใช้ฟังก์ชัน MustCompile
เพื่อหลีกเลี่ยงข้อผิดพลาด โดยจะแจ้งเตือนทันทีหากคอมไพล์ไม่สำเร็จ

8.การแทนที่: ฟังก์ชันในแพ็กเกจนี้สามารถใช้แทนที่ข้อความที่จับคู่ในสตริงได้

9.การแปลงข้อมูลที่จับคู่: สามารถใช้ฟังก์ชันในการปรับเปลี่ยนข้อความที่จับคู่ได้ตามที่กำหนด

