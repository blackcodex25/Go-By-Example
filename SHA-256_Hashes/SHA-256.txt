SHA-256 (Secure Hash Algorithm 256-bit) เป็นฟังก์ชันการแฮช (hash function)
ที่เป็นส่วนหนึ่งของตระกูล SHA-2 ซึ่งออกแบบโดย National Security Agency (NSA)
ของสหรัฐอเมริการ SHA-256 ถูกใช้ในการสร้างค่าผลลัพธ์ (hash value) ขนาด 256 บิต
จากข้อมูลอินพุตที่กำหนด โดยมีลักษณะสำคัญคือ ขนาดของข้อมูลอินพุต 
สามารถเป็นข้อมูลขนาดใดก็ได้ แต่ค่าผลลัพธ์ที่ได้จะเป็นสตริงขนาด 64 ตัวอักษรเสมอเมื่อ
แปลงเป็นฐาน 16 (hexadecimal) ซึ่งยาว 256 บิต

ลักษณะสำคัญของ SHA-256
1.Deterministic: ข้อมูลอินพุตเดียวกันจะได้ค่าผลลัพธ์ (hash value) เดียวกันเสมอ
2.Fixed Output Size: ไม่ว่าขนาดข้อมูลอินพุตจะใหญ่แค่ไหน ผลลัพธ์จะเป็นค่าขนาด 256 บิตเสมอ
3.Pre-image Resistance: ไม่สามารถหาอินพุตจากค่าผลลัพธ์ได้ โดยง่าย
4.Collision Resistance: ยากที่จะหาข้อมูลสองชุดที่ต่างกันแต่มีค่าผลลัพธ์เดียวกัน
5.Avalanche Effect: การเปลี่ยนแปลงเพียงเล็กน้อยในอินพุตจะทำให้ค่าผลลัพธ์
เปลี่ยนแปลงอย่างมาก

การใช้งาน SHA-256
SHA-256 ถูกใช้ในหลายแอปพลิเคชันที่ต้องการการเข้ารหัสข้อมูล หรือการยืนยันความถูกต้อง 
เช่น:
Blockchain: ใช้ในเทคโนโลยีบล็อกเชน เช่น Bitcoin เพื่อยืนยันธุรกรรมและสร้างฟังก์ชัน
แฮชของบล็อก
Digital Signatures: ใช้ในการสร้างลายเซ็นดิจิทัลเพื่อยืนยันความสมบูรณ์ของข้อมูล
Password Hashing: ใช้ในการเก็บรหัสผ่านในรูปของแฮช เพื่อ
ป้องกันการเข้าถึงรหัสผ่านจริงในกรณีที่ฐานข้อมูลถูกแฮ็ก

ตัวอย่างการใช้ SHA-256 ใน Go
func main() {
    message := "Hello, World!"
    hash := sha256.New()
    hash.Wirte([]byte(message))
    hashInBytes := hash.Sum(nil)

    fmt.Printf("%x\n", hashInBytes)
}

สรุปเนื้อหาสำคัญ
SHA-256 เป็นฟังก์ชันแฮชที่มีความปลอดภัยสูงและถูกใช้อย่างแพร่หลายใน
การเข้ารหัสและยืนยันข้อมูลในหลายรอบในหลายระบบ เช่น บล็อกเชน และลายเซ็นดิจิทัล
ขนาดของค่าผลลัพธ์จะคงที่ที่ 256 บิตแม้ว่าข้อมูลอินพุตจะมีขนาดใหญ่หรือเล็กก็ตาม