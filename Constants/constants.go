package main

import (
	f "fmt"
	"math"
) /* constants ในภาษา Go ซึ่งสามารถประกาศได้ทั้งค่าของตัวอักษร
สตริง, บูลีน, และ ตัวเลข
*/
/* การประกาศค่าคงที่ (Constants)
ในภาษา Go เราสามารถประกาศค่าคงที่ด้วยคำสั่ง const ซึ่ง
ค่าคงที่จะไม่สามารถเปลี่ยนแปลงได้หลังจากที่ถูกประกาศแล้ว
*/
// นำเข้าแพ็กเกจ math เพื่อใช้คำนวณทางคณิตศาสตร์ตามลำดับ
// ประกาศค่าคงที่ s เป็นประเภท string และกำหนดค่าเป็น constant
// ค่านี้จะไม่สามารถเปลี่ยนแปลงได้ใน ภายหลังในโปรแกรม
const s string = "constant"

func main() {
	f.Println(s) // พิมพ์ค่าของตัวแปร s ออกมาบนหน้าจอ

	// ประกาศค่าคงที่ n เป็นค่าตัวเลข 500000000 โดยไม่
	// กำหนดชนิดของตัวเลข ซึ่งใน Go สามารถทำได้โดยค่าคงที่นี้จะ
	// มีความเที่ยงตรงสูง (arbitrary precision)
	const n = 500000000

	// คำนวณค่า 3e20 หาร n และเก็บผลลัพธ์ไว้ใน d
	const d = 3e20 / n
	// พิมพ์ค่าของ d ออกจอ ซึ่งการคำนวณนี้ทำได้ด้วยความแม่นยำสูง
	f.Println(d)

	// ค่าคงที่ d จะไม่มีชนิดข้อมูลที่แน่นอนจนกระทั่งถูกแปลงหรือใช้ใน
	// บริบทที่ต้องการประเภทเฉพาะ เช่นในตัวอย่างนี้ เราแปลง d เป็นประเภท
	// int64 ก่อนที่จะพิมพ์ค่าออกมา
	f.Println(int64(d))

	// การใช้ค่าคงที่ในฟังก์ชันที่ต้องการประเภทเฉพาะ
	// ในกรณีนี้ เราใช้ค่าคงที่ n ในฟังก์ชัน math.Sin ซึ่งต้องการค่าประเภท
	// float64 ดังนั้น Go จะทำการแปลงประเภทของ n
	// โดยอัตโนมัติก่อนที่จะใช้ในฟังก์ชัน
	f.Println(math.Sin(n))
}

/* สรุป
const ใช้สำหรับการประกาศค่าคงที่ใน Go ซึ่งสามารถใช้ได้กับข้อมูลประเภทต่างๆ
เช่น ตัวอักษร สตริง ตัวเลข และบูลีน
ค่าคงที่สามารถใช้ในนิพจน์ทางคณิตศาสตร์และสามารถแปลงเป็นประเภทที่ต้องการได้
เมื่อต้องการใช้ในบริบทที่เฉพาะเจาะจง
ค่าคงที่สามารถประกาศได้ทุกที่ที่สามารถประกาศตัวแปร var ได้
โปรแกรมนี้จึงแสดงให้เห็นถึงการใช้งานและความยืดหยุ่นของค่าคงที่ในภาษา Go
ซึ่งสามารถใช้ในการคำนวณและการแปลงประเภทได้ตามความต้องการ
*/
